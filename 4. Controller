  Step:3 Controller
   package com.javatpoint.controllers;     
    import java.util.List;    
    import org.springframework.beans.factory.annotation.Autowired;    
    import org.springframework.stereotype.Controller;  
    import org.springframework.ui.Model;  
    import org.springframework.web.bind.annotation.ModelAttribute;    
    import org.springframework.web.bind.annotation.PathVariable;    
    import org.springframework.web.bind.annotation.RequestMapping;    
    import org.springframework.web.bind.annotation.RequestMethod;     
    import com.javatpoint.beans.Emp;    
    import com.javatpoint.dao.EmpDao;    

    @Controller    
    public class EmpController 
    {    
        @Autowired    
        EmpDao dao; //will inject dao from XML file    
            
        /*displays  form . 
           Here "command" is a reserved request attribute  
           which is used to display object data into form  
         */  
  
        @RequestMapping("/empform")    
        public String showform(Model m)
       {    
            m.addAttribute("command", new Emp());  
            return "empform";   
        }    

        /*save. 
             @ModelAttribute puts request data  
             into model object. You need to mention RequestMethod.POST method   
             because default request is GET
        */    
        @RequestMapping(value="/save", method = RequestMethod.POST)    
        public String save(@ModelAttribute("emp") Emp emp)                 
       {    
            dao.save(emp);    
            return "redirect:/viewemp";//will redirect to viewemp request mapping    
        }    
        /* View */    
        @RequestMapping("/viewemp")    
        public String viewemp(Model m)
        {    
            List<Emp> list=dao.getEmployees();    
            m.addAttribute("list",list);  
            return "viewemp";    
        }   
      /* Edit 
          @PathVariable puts URL data into variable.
       */    
        @RequestMapping(value="/editemp/{id}")    
        public String edit(@PathVariable int id, Model m)
       {    
            Emp emp=dao.getEmpById(id);    
            m.addAttribute("command",emp);  
            return "empeditform";    
        }  
  
        /* update */    
        @RequestMapping(value="/editsave", method = RequestMethod.POST)    
        public String editsave(@ModelAttribute("emp") Emp emp)
       {    
            dao.update(emp);    
            return "redirect:/viewemp";    
        }    

        /* delete*/    
        @RequestMapping(value="/deleteemp/{id}", method = RequestMethod.GET)    
        public String delete(@PathVariable int id)
       {    
            dao.delete(id);    
            return "redirect:/viewemp";    
        }     
    }  

